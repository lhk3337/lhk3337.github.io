{"version":3,"file":"component---src-pages-blog-markdown-remark-frontmatter-slug-tsx-4fe31b886ff1e4d24693.js","mappings":"iIAyBA,IAvBoB,WASlB,OARAA,EAAAA,EAAAA,YAAU,WACJC,SACFA,OAAOC,YAAcD,OAAOC,aAAe,GAC3CD,OAAOC,YAAYC,KAAK,CAAC,GAG7B,GAAG,IAGDC,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,OACEC,UAAU,cACVC,MAAO,CAAEC,QAAS,SAClB,iBAAe,0BACf,eAAa,aACb,iBAAe,OACf,6BAA2B,SAInC,C,+HCrBe,SAASC,IACtB,IAAMC,GAAaC,EAAAA,EAAAA,QAAuB,MAe1C,OAbAV,EAAAA,EAAAA,YAAU,WAAO,IAADW,EACd,GAA4C,KAAtB,QAAlBA,EAAAF,EAAWG,eAAO,IAAAD,OAAA,EAAlBA,EAAoBE,SAASC,QAAc,CAAC,IAADC,EACvCC,EAAWC,SAASC,cAAc,UACxCF,EAASG,aAAa,MAAO,iCAC7BH,EAASG,aAAa,cAAe,aACrCH,EAASG,aAAa,QAAS,QAC/BH,EAASG,aAAa,OAAQ,yBAC9BH,EAASG,aAAa,aAAc,YACpCH,EAASG,aAAa,QAAS,gBAEb,QAAlBJ,EAAAN,EAAWG,eAAO,IAAAG,GAAlBA,EAAoBK,YAAYJ,EAClC,CACF,GAAG,IACIZ,EAAAA,cAAA,OAAKC,UAAU,QAAQgB,IAAKZ,GACrC,C,wBCWe,SAASa,EAAgBC,GAG9B,IAFRC,EAAID,EAAJC,KACAC,EAAQF,EAARE,SAGAC,EAaIF,EAZFG,eACEC,EAAIF,EAAJE,KAAIC,EAAAH,EACJI,YACEC,EAAIF,EAAJE,KACAC,EAAKH,EAALG,MAEAC,GADIJ,EAAJK,KACUL,EAAVI,YAEqBE,EAAeN,EADpCO,MACEC,gBAAmBF,gBAK3B,OACE/B,EAAAA,cAACkC,EAAAA,EAAM,CAACb,SAAUA,EAASc,UAEzBnC,EAAAA,cAACoC,EAAAA,EAAW,CAACnC,UAAU,yBAAyBoC,IAAI,QAAQC,MAAOP,IACnE/B,EAAAA,cAACuC,EAAAA,EAAW,MACZvC,EAAAA,cAAA,OAAKC,UAAU,yDACbD,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OAAKC,UAAU,0BACbD,EAAAA,cAAA,QAAMC,UAAU,6EACb4B,EAAWW,SAGhBxC,EAAAA,cAAA,MAAIC,UAAU,sBAAsB2B,GACpC5B,EAAAA,cAAA,MAAIC,UAAU,yBAAyB0B,IAEzC3B,EAAAA,cAAA,OAAKC,UAAU,kBAAkBwC,wBAAyB,CAAEC,OAAQlB,KACpExB,EAAAA,cAAA,OAAKC,UAAU,+CACbD,EAAAA,cAAA,QAAMC,UAAU,+CAA8C,iBAC9CD,EAAAA,cAAA,WAAM,uBACAA,EAAAA,cAAA,WAAM,uBAI9BA,EAAAA,cAACI,EAAQ,OAIjB,CAEO,IAmBMuC,EAAO,SAAHC,GAAwB,IACvCC,EADyBD,EAAJxB,KAEnBG,eACEG,YAAeE,EAAKiB,EAALjB,MAAOE,EAAIe,EAAJf,KAG1B,OAAO9B,EAAAA,cAAC8C,EAAAA,EAAG,CAAClB,MAAOA,EAAOE,KAAMA,GAClC,C","sources":["webpack://my-tech-blogs/./src/components/adsense.tsx","webpack://my-tech-blogs/./src/components/comments.tsx","webpack://my-tech-blogs/./src/pages/blog/{markdownRemark.frontmatter__slug}.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nconst AdComponent = () => {\n  useEffect(() => {\n    if (window) {\n      window.adsbygoogle = window.adsbygoogle || [];\n      window.adsbygoogle.push({});\n    }\n    // 광고 스크립트를 실행하는 함수\n  }, []);\n\n  return (\n    <div className=\"mt-20 text-center\">\n      <ins\n        className=\"adsbygoogle\"\n        style={{ display: \"block\" }}\n        data-ad-client=\"ca-pub-6684846724407111\" // 구글 애드센스 코드의 data-ad-client 값으로 대체\n        data-ad-slot=\"8046162930\" // 구글 애드센스 코드의 data-ad-slot 값으로 대체\n        data-ad-format=\"auto\"\n        data-full-width-responsive=\"true\"\n      ></ins>\n    </div>\n  );\n};\n\nexport default AdComponent;\n","import React, { useEffect, useRef } from \"react\";\n\nexport default function Comments() {\n  const commentRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (commentRef.current?.children.length === 0) {\n      const scriptEl = document.createElement(\"script\");\n      scriptEl.setAttribute(\"src\", \"https://utteranc.es/client.js\");\n      scriptEl.setAttribute(\"crossorigin\", \"anonymous\");\n      scriptEl.setAttribute(\"async\", \"true\");\n      scriptEl.setAttribute(\"repo\", \"lhk3337/blog-comments\");\n      scriptEl.setAttribute(\"issue-term\", \"pathname\");\n      scriptEl.setAttribute(\"theme\", \"github-light\");\n\n      commentRef.current?.appendChild(scriptEl);\n    }\n  }, []);\n  return <div className=\"py-10\" ref={commentRef} />;\n}\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"components/layout\";\nimport Seo from \"components/Seo\";\nimport Comments from \"components/comments\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport AdComponent from \"components/adsense\";\ninterface Props {\n  location: {\n    pathname: string;\n    desc: string;\n  };\n  data: {\n    markdownRemark: {\n      frontmatter: {\n        title: string;\n        tags: string[];\n        date: string;\n        desc: string;\n        categories: string[];\n        topbg: {\n          childImageSharp: {\n            gatsbyImageData: IGatsbyImageData;\n          };\n        };\n      };\n      html: string;\n    };\n  };\n}\nexport default function BlogPostTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n  location,\n}: Props) {\n  // data.markdownRemark holds your post data\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: {\n        date,\n        title,\n        desc,\n        categories,\n        topbg: {\n          childImageSharp: { gatsbyImageData },\n        },\n      },\n    },\n  } = data;\n  return (\n    <Layout location={location.pathname}>\n      {/* example image */}\n      <GatsbyImage className=\"mb-10 h-[24rem] w-full\" alt=\"topbg\" image={gatsbyImageData} />\n      <AdComponent />\n      <div className=\"mx-auto mt-20 max-w-6xl space-y-10 px-6 pb-1 sm:px-14\">\n        <div className=\"space-y-10\">\n          <div className=\"flex h-10 items-center\">\n            <span className=\"rounded-md bg-slate-100 pl-2 pr-2.5 pt-1 text-xl font-bold text-slate-700\">\n              {categories.join()}\n            </span>\n          </div>\n          <h1 className=\"text-4xl font-bold\">{title}</h1>\n          <h2 className=\"text-lg text-gray-400\">{date}</h2>\n        </div>\n        <div className=\"markdown_styles\" dangerouslySetInnerHTML={{ __html: html }} />\n        <div className=\"border-t border-stone-200 pt-10 text-center\">\n          <span className=\"text-xl text-slate-500 dark:text-slate-300 \">\n            이해한 것을 정리하다보니 <br />\n            잘못된 부분이 있을 수도 있습니다. <br />\n            댓글로 잘못된 부분을 알려주세요.\n          </span>\n        </div>\n        <Comments />\n      </div>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY.MM.DD\")\n        slug\n        title\n        desc\n        categories\n        topbg {\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({ data }: Props) => {\n  const {\n    markdownRemark: {\n      frontmatter: { title, desc },\n    },\n  } = data;\n  return <Seo title={title} desc={desc} />;\n};\n"],"names":["useEffect","window","adsbygoogle","push","React","className","style","display","Comments","commentRef","useRef","_commentRef$current","current","children","length","_commentRef$current2","scriptEl","document","createElement","setAttribute","appendChild","ref","BlogPostTemplate","_ref","data","location","_data$markdownRemark","markdownRemark","html","_data$markdownRemark$","frontmatter","date","title","categories","desc","gatsbyImageData","topbg","childImageSharp","Layout","pathname","GatsbyImage","alt","image","AdComponent","join","dangerouslySetInnerHTML","__html","Head","_ref2","_data$markdownRemark$2","Seo"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-index-tsx-914b6a42c4deca581a3e.js","mappings":"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","sources":["webpack://my-tech-blogs/./src/components/categories/categoryIcon.tsx","webpack://my-tech-blogs/./src/components/categories/categoryMenu.tsx","webpack://my-tech-blogs/./src/components/categories/categoryItem.tsx","webpack://my-tech-blogs/./src/components/categories/categoryList.tsx","webpack://my-tech-blogs/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nexport const JsIcons = () => {\n  return (\n    <>\n      <svg\n        role=\"img\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-7 w-7 rounded-lg dark:bg-slate-700 dark:fill-white sm:h-10 sm:w-10\"\n      >\n        <path d=\"M0 0h24v24H0V0zm22.034 18.276c-.175-1.095-.888-2.015-3.003-2.873-.736-.345-1.554-.585-1.797-1.14-.091-.33-.105-.51-.046-.705.15-.646.915-.84 1.515-.66.39.12.75.42.976.9 1.034-.676 1.034-.676 1.755-1.125-.27-.42-.404-.601-.586-.78-.63-.705-1.469-1.065-2.834-1.034l-.705.089c-.676.165-1.32.525-1.71 1.005-1.14 1.291-.811 3.541.569 4.471 1.365 1.02 3.361 1.244 3.616 2.205.24 1.17-.87 1.545-1.966 1.41-.811-.18-1.26-.586-1.755-1.336l-1.83 1.051c.21.48.45.689.81 1.109 1.74 1.756 6.09 1.666 6.871-1.004.029-.09.24-.705.074-1.65l.046.067zm-8.983-7.245h-2.248c0 1.938-.009 3.864-.009 5.805 0 1.232.063 2.363-.138 2.711-.33.689-1.18.601-1.566.48-.396-.196-.597-.466-.83-.855-.063-.105-.11-.196-.127-.196l-1.825 1.125c.305.63.75 1.172 1.324 1.517.855.51 2.004.675 3.207.405.783-.226 1.458-.691 1.811-1.411.51-.93.402-2.07.397-3.346.012-2.054 0-4.109 0-6.179l.004-.056z\" />\n      </svg>\n    </>\n  );\n};\nexport const ReactIcon = () => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-7 w-7 rounded-lg dark:bg-slate-700 dark:fill-white sm:h-10 sm:w-10\"\n  >\n    <path d=\"M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.636-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z\" />\n  </svg>\n);\n\nexport const TsIcon = () => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-7 w-7 rounded-lg dark:bg-slate-700 dark:fill-white sm:h-10 sm:w-10\"\n  >\n    <path d=\"M1.125 0C.502 0 0 .502 0 1.125v21.75C0 23.498.502 24 1.125 24h21.75c.623 0 1.125-.502 1.125-1.125V1.125C24 .502 23.498 0 22.875 0zm17.363 9.75c.612 0 1.154.037 1.627.111a6.38 6.38 0 0 1 1.306.34v2.458a3.95 3.95 0 0 0-.643-.361 5.093 5.093 0 0 0-.717-.26 5.453 5.453 0 0 0-1.426-.2c-.3 0-.573.028-.819.086a2.1 2.1 0 0 0-.623.242c-.17.104-.3.229-.393.374a.888.888 0 0 0-.14.49c0 .196.053.373.156.529.104.156.252.304.443.444s.423.276.696.41c.273.135.582.274.926.416.47.197.892.407 1.266.628.374.222.695.473.963.753.268.279.472.598.614.957.142.359.214.776.214 1.253 0 .657-.125 1.21-.373 1.656a3.033 3.033 0 0 1-1.012 1.085 4.38 4.38 0 0 1-1.487.596c-.566.12-1.163.18-1.79.18a9.916 9.916 0 0 1-1.84-.164 5.544 5.544 0 0 1-1.512-.493v-2.63a5.033 5.033 0 0 0 3.237 1.2c.333 0 .624-.03.872-.09.249-.06.456-.144.623-.25.166-.108.29-.234.373-.38a1.023 1.023 0 0 0-.074-1.089 2.12 2.12 0 0 0-.537-.5 5.597 5.597 0 0 0-.807-.444 27.72 27.72 0 0 0-1.007-.436c-.918-.383-1.602-.852-2.053-1.405-.45-.553-.676-1.222-.676-2.005 0-.614.123-1.141.369-1.582.246-.441.58-.804 1.004-1.089a4.494 4.494 0 0 1 1.47-.629 7.536 7.536 0 0 1 1.77-.201zm-15.113.188h9.563v2.166H9.506v9.646H6.789v-9.646H3.375z\" />\n  </svg>\n);\n\nexport const NextJsIcon = () => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-7 w-7 rounded-lg dark:bg-slate-700 dark:fill-white sm:h-10 sm:w-10\"\n  >\n    <path d=\"M11.5725 0c-.1763 0-.3098.0013-.3584.0067-.0516.0053-.2159.021-.3636.0328-3.4088.3073-6.6017 2.1463-8.624 4.9728C1.1004 6.584.3802 8.3666.1082 10.255c-.0962.659-.108.8537-.108 1.7474s.012 1.0884.108 1.7476c.652 4.506 3.8591 8.2919 8.2087 9.6945.7789.2511 1.6.4223 2.5337.5255.3636.04 1.9354.04 2.299 0 1.6117-.1783 2.9772-.577 4.3237-1.2643.2065-.1056.2464-.1337.2183-.1573-.0188-.0139-.8987-1.1938-1.9543-2.62l-1.919-2.592-2.4047-3.5583c-1.3231-1.9564-2.4117-3.556-2.4211-3.556-.0094-.0026-.0187 1.5787-.0235 3.509-.0067 3.3802-.0093 3.5162-.0516 3.596-.061.115-.108.1618-.2064.2134-.075.0374-.1408.0445-.495.0445h-.406l-.1078-.068a.4383.4383 0 01-.1572-.1712l-.0493-.1056.0053-4.703.0067-4.7054.0726-.0915c.0376-.0493.1174-.1125.1736-.143.0962-.047.1338-.0517.5396-.0517.4787 0 .5584.0187.6827.1547.0353.0377 1.3373 1.9987 2.895 4.3608a10760.433 10760.433 0 004.7344 7.1706l1.9002 2.8782.096-.0633c.8518-.5536 1.7525-1.3418 2.4657-2.1627 1.5179-1.7429 2.4963-3.868 2.8247-6.134.0961-.6591.1078-.854.1078-1.7475 0-.8937-.012-1.0884-.1078-1.7476-.6522-4.506-3.8592-8.2919-8.2087-9.6945-.7672-.2487-1.5836-.42-2.4985-.5232-.169-.0176-1.0835-.0366-1.6123-.037zm4.0685 7.217c.3473 0 .4082.0053.4857.047.1127.0562.204.1642.237.2767.0186.061.0234 1.3653.0186 4.3044l-.0067 4.2175-.7436-1.14-.7461-1.14v-3.066c0-1.982.0093-3.0963.0234-3.1502.0375-.1313.1196-.2346.2323-.2955.0961-.0494.1313-.054.4997-.054z\" />\n  </svg>\n);\n\nexport const TailwinIcon = () => (\n  <svg\n    role=\"img\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-7 w-7 rounded-xl dark:bg-slate-700 dark:fill-white sm:h-10 sm:w-10\"\n  >\n    <path d=\"M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 c1.177,1.194,2.538,2.576,5.512,2.576c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z\" />\n  </svg>\n);\n\nexport const WebIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    strokeWidth=\"1.5\"\n    stroke=\"currentColor\"\n    className=\"h-7 w-7 rounded-xl dark:bg-slate-700  sm:h-10 sm:w-10\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      d=\"M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418\"\n    />\n  </svg>\n);\n","import { Link } from \"gatsby\";\nimport { cls } from \"libs/cls\";\nimport { mainProps } from \"pages/index\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { JsIcons, NextJsIcon, ReactIcon, TailwinIcon, TsIcon, WebIcon } from \"./categoryIcon\";\n\ninterface Values {\n  [key: string]: any;\n}\n\nexport default function CategoryMenu({ data, location }: mainProps) {\n  const { search } = location;\n  const [_, query] = search.split(\"=\");\n\n  const scrollRef = useRef<HTMLUListElement>(null);\n  const [scrollX, setScrollX] = useState(0);\n\n  const slide = (shift: number) => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft += shift;\n    }\n    setScrollX(scrollX + shift);\n  };\n  const categoriesData = {\n    ...data.allMarkdownRemark,\n    group: data.allMarkdownRemark.group.map((categoryItem) => {\n      return {\n        ...categoryItem,\n        Javascript: <JsIcons />,\n        React: <ReactIcon />,\n        Typescript: <TsIcon />,\n        Nextjs: <NextJsIcon />,\n        Tailwind: <TailwinIcon />,\n        Web: <WebIcon />,\n      };\n    }),\n  };\n\n  return (\n    <menu className=\"flex items-center rounded-md bg-[#F3F3F3] pt-1 dark:bg-[#161b22] sm:px-3\">\n      <button className=\"px-1 sm:px-0\" onClick={() => slide(-150)}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth=\"2.5\"\n          stroke=\"currentColor\"\n          className=\"h-6 w-6\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15.75 19.5L8.25 12l7.5-7.5\" />\n        </svg>\n      </button>\n      <ul\n        ref={scrollRef}\n        className=\"scroll flex h-full w-full space-x-8 overflow-x-scroll scroll-smooth whitespace-nowrap scrollbar-hide\"\n      >\n        <li>\n          <Link to={`?category=all`} className=\"flex cursor-pointer flex-col items-center p-2\">\n            <div\n              className={cls(\n                \"mb-2 flex h-12 w-12 items-center justify-center rounded-full bg-white font-bold dark:bg-slate-700 sm:h-20 sm:w-20\",\n                query === undefined || query === \"all\" ? \"border-2 border-[#2E8EFF]\" : \"\"\n              )}\n            >\n              <span className=\" text-base sm:text-xl\">All</span>\n            </div>\n            <span className={cls(\"text-sm sm:text-base\", query === undefined || query === \"all\" ? \"font-bold\" : \"\")}>\n              All ({data.allMarkdownRemark.totalCount})\n            </span>\n          </Link>\n        </li>\n        {categoriesData.group.map((caterory: Values, i) => {\n          return (\n            <li key={i}>\n              <Link\n                to={`?category=${caterory.fieldValue.toLowerCase()}`}\n                className=\"flex cursor-pointer flex-col items-center p-2\"\n              >\n                <div\n                  className={cls(\n                    \"mb-2 flex h-12 w-12 items-center justify-center rounded-full bg-white dark:bg-slate-700 sm:h-20 sm:w-20\",\n                    query === caterory.fieldValue.toLowerCase() ? \"border-2 border-[#2E8EFF]\" : \"\"\n                  )}\n                >\n                  {caterory[caterory.fieldValue]}\n                </div>\n                <span\n                  className={cls(\n                    \"text-sm sm:text-base\",\n                    query === caterory.fieldValue.toLowerCase() ? \"font-bold\" : \"\"\n                  )}\n                >\n                  {caterory.fieldValue} ({caterory.totalCount})\n                </span>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <button className=\"px-1 sm:px-0\" onClick={() => slide(150)}>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          strokeWidth={2.5}\n          stroke=\"currentColor\"\n          className=\"h-6 w-6\"\n        >\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\n        </svg>\n      </button>\n    </menu>\n  );\n}\n","import { Link } from \"gatsby\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport React from \"react\";\ninterface Props {\n  categories: [string];\n  date: string;\n  slug: string;\n  title: string;\n  desc: string;\n  thumbnail: {\n    childImageSharp: {\n      gatsbyImageData: IGatsbyImageData;\n    };\n  };\n}\nexport default function CategoryItem({\n  slug,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  categories,\n  title,\n  desc,\n  date,\n}: Props) {\n  return (\n    <Link\n      to={`/blog${slug}`}\n      className=\"rounded-lg shadow-md duration-500 ease-in-out hover:scale-[1.01] hover:shadow-xl dark:bg-slate-800\"\n    >\n      <GatsbyImage image={gatsbyImageData} alt=\"thumbnail\" className=\"h-60 rounded-t-lg\" />\n      <div className=\" p-5\">\n        <span className=\"rounded-md bg-slate-100 pl-2 pr-2.5 pt-1 text-xl text-slate-700\">{categories.join()}</span>\n        <h1 className=\"mt-5 mb-2 text-2xl font-bold\">{title}</h1>\n        <span>{desc}</span>\n        <div className=\"mt-2\">\n          <span className=\"text-sm font-semibold text-slate-500\">{date}</span>\n        </div>\n      </div>\n    </Link>\n  );\n}\n","import { Link } from \"gatsby-link\";\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport CategoryItem from \"./categoryItem\";\n\ninterface Props {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: [\n        {\n          node: {\n            frontmatter: {\n              categories: [string];\n              date: string;\n              slug: string;\n              title: string;\n              desc: string;\n              thumbnail: {\n                childImageSharp: {\n                  gatsbyImageData: IGatsbyImageData;\n                };\n              };\n            };\n          };\n        }\n      ];\n      group: [{ totalCount: number; fieldValue: string }];\n    };\n  };\n  selectedCategory: string;\n}\n\nexport default function CategoryList({ data, selectedCategory }: Props) {\n  return (\n    <div className=\"category_lists\">\n      {selectedCategory === \"all\"\n        ? data.allMarkdownRemark.edges.map((value, i) => {\n            return <CategoryItem {...value.node.frontmatter} key={i} />;\n          })\n        : data.allMarkdownRemark.edges\n            .filter((value) => value.node.frontmatter.categories[0].toLowerCase() === selectedCategory)\n            .map((item, i) => {\n              return <CategoryItem {...item.node.frontmatter} key={i} />;\n            })}\n    </div>\n  );\n}\n","import CategoryMenu from \"components/categories/categoryMenu\";\nimport Layout from \"components/layout\";\nimport CategoryList from \"components/categories/categoryList\";\nimport Seo from \"components/Seo\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport React from \"react\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\n\nexport interface mainProps {\n  location: PageProps[\"location\"];\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: [\n        {\n          node: {\n            frontmatter: {\n              categories: [string];\n              date: string;\n              slug: string;\n              title: string;\n              desc: string;\n              thumbnail: {\n                childImageSharp: {\n                  gatsbyImageData: IGatsbyImageData;\n                };\n              };\n            };\n          };\n        }\n      ];\n      group: [{ totalCount: number; fieldValue: string }];\n    };\n  };\n}\n\nexport default function IndexPage({ location, data }: mainProps) {\n  const { search } = location;\n  const [params, value] = search.split(\"=\");\n  const selectedCategory = params !== \"?category\" ? \"all\" : value;\n\n  return (\n    <Layout location={location.pathname}>\n      <div className=\"mx-auto mt-16 px-6 sm:px-14 md:max-w-5xl lg:max-w-7xl\">\n        <h1 className=\"mb-5 text-2xl font-bold\">Category</h1>\n        <CategoryMenu data={data} location={location} />\n        <CategoryList data={data} selectedCategory={selectedCategory} />\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query CategoryList {\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            date(formatString: \"YYYY.MM.DD\")\n            categories\n            desc\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(quality: 100, height: 700)\n              }\n            }\n          }\n        }\n      }\n      group(field: { frontmatter: { categories: SELECT } }) {\n        totalCount\n        fieldValue\n      }\n      totalCount\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"Blog\" />;\n"],"names":["JsIcons","React","role","viewBox","xmlns","className","d","ReactIcon","TsIcon","NextJsIcon","TailwinIcon","WebIcon","fill","strokeWidth","stroke","strokeLinecap","strokeLinejoin","CategoryMenu","data","location","search","_","query","split","scrollRef","useRef","scrollX","setScrollX","useState","slide","shift","current","scrollLeft","categoriesData","allMarkdownRemark","group","map","categoryItem","Javascript","Typescript","Nextjs","Tailwind","Web","onClick","ref","Link","to","cls","undefined","totalCount","caterory","i","key","fieldValue","toLowerCase","CategoryItem","slug","thumbnail","childImageSharp","gatsbyImageData","categories","title","desc","date","GatsbyImage","image","alt","join","CategoryList","selectedCategory","edges","value","node","frontmatter","filter","item","IndexPage","params","Layout","pathname","Head","Seo"],"sourceRoot":""}
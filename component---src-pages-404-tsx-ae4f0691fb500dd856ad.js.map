{"version":3,"file":"component---src-pages-404-tsx-ae4f0691fb500dd856ad.js","mappings":"2KAKe,SAASA,EAAGC,GAAqC,IAA3BC,EAASD,EAAhBE,MAAkBC,EAAIH,EAAJG,KAC9CC,GAKIC,EAAAA,EAAAA,KAJKC,EAASF,EAAhBF,MACAK,EAAOH,EAAPG,QACAC,EAAWJ,EAAXI,YACQC,EAASL,EAAjBM,KAAQD,UAGV,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASV,GAAcK,IAChDG,EAAAA,cAAA,QAAMC,KAAK,WAAWC,QAAQ,0CAC9BF,EAAAA,cAAA,QAAMG,UAAU,eAAeD,QAAQ,4BAEvCF,EAAAA,cAAA,QAAMI,SAAS,UAAUF,QAAQ,YACjCF,EAAAA,cAAA,QAAMI,SAAS,WAAWF,QAASP,IACnCK,EAAAA,cAAA,QAAMI,SAAS,SAASF,QAASN,IACjCI,EAAAA,cAAA,QAAMI,SAAS,WAAWF,QAASJ,IACnCE,EAAAA,cAAA,QAAMI,SAAS,iBAAiBF,QAASV,GAAcK,IACvDG,EAAAA,cAAA,QAAMI,SAAS,eAAeF,QAASP,IAEvCK,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,mBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASN,IACpCI,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASV,GAAcK,IACxDG,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAAQ,mBACrCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,IAEpCE,EAAAA,cAAA,QAAMC,KAAK,0BAA0BC,QAAQ,6CAE7CF,EAAAA,cAAA,QAAMK,KAAK,OACXL,EAAAA,cAAA,aACGV,EAAU,IAAEE,EAAI,KAAQA,EAAS,GAAG,MAAIG,GAIjD,C,qECvCaD,EAAkB,WAC7B,IAAAY,GAAuBC,EAAAA,EAAAA,gBAAe,cAA9BC,EAAIF,EAAJE,KAAMT,EAAIO,EAAJP,KAoBd,OAAAU,OAAAC,OAAA,GAAYF,EAAKG,aAAa,CAACZ,KAAAA,GACjC,C,gICnBe,SAASa,KACtBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,UAAS,IACX,GAAG,GAEL,CAEO,IAAMC,EAAO,WAAH,OAASf,EAAAA,cAACZ,EAAAA,EAAG,CAACG,MAAM,YAAa,C","sources":["webpack://my-tech-blogs/./src/components/Seo.tsx","webpack://my-tech-blogs/./src/hooks/use-site-metadata.ts","webpack://my-tech-blogs/./src/pages/404.tsx"],"sourcesContent":["import { useSiteMetadata } from \"hooks/use-site-metadata\";\nimport React from \"react\";\ninterface Props {\n  [key: string]: string;\n}\nexport default function Seo({ title: pageTitle, desc }: Props) {\n  const {\n    title: siteTitle,\n    siteUrl,\n    description,\n    file: { publicURL },\n  } = useSiteMetadata();\n\n  return (\n    <>\n      <meta name=\"description\" content={desc ? desc : description} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\n\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={siteTitle} />\n      <meta property=\"og:url\" content={siteUrl} />\n      <meta property=\"og:image\" content={publicURL} />\n      <meta property=\"og:description\" content={desc ? desc : description} />\n      <meta property=\"og:site_name\" content={siteTitle} />\n\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:site\" content=\"@author_handle\" />\n      <meta name=\"twitter:title\" content={siteUrl} />\n      <meta name=\"twitter:description\" content={desc ? desc : description} />\n      <meta name=\"twitter:creator\" content=\"@author_handle\" />\n      <meta name=\"twitter:image\" content={publicURL} />\n\n      <meta name=\"naver-site-verification\" content=\"c78512d8a5b78f43ecd4ea7fa1ab32e00c938ab7\" />\n\n      <html lang=\"ko\" />\n      <title>\n        {pageTitle} {desc ? `- ${desc}` : \"\"} | {siteTitle}\n      </title>\n    </>\n  );\n}\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const { site, file } = useStaticQuery(\n    graphql`\n      query SiteMetaData {\n        site {\n          siteMetadata {\n            title\n            siteUrl\n            description\n          }\n        }\n        file(name: { eq: \"logos\" }) {\n          childImageSharp {\n            gatsbyImageData(width: 50, height: 50)\n          }\n          publicURL\n        }\n      }\n    `\n  );\n\n  return { ...site.siteMetadata, file };\n};\n","import React, { useEffect } from \"react\";\nimport { navigate, PageProps } from \"gatsby\";\n\nimport Seo from \"components/Seo\";\n\nexport default function NotFoundPage() {\n  useEffect(() => {\n    navigate(\"/\");\n  }, []);\n  return;\n}\n\nexport const Head = () => <Seo title=\"NotFound\" />;\n"],"names":["Seo","_ref","pageTitle","title","desc","_useSiteMetadata","useSiteMetadata","siteTitle","siteUrl","description","publicURL","file","React","name","content","httpEquiv","property","lang","_useStaticQuery","useStaticQuery","site","Object","assign","siteMetadata","NotFoundPage","useEffect","navigate","Head"],"sourceRoot":""}